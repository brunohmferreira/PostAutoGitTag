steps:
- ${{ if and(eq(variables['Decorator.GitTagCreation.Enabled'], True), eq(variables['System.StageDisplayName'], 'PRD')) }}:
  - task: PowerShell@2
    displayName: 'Git: Tag Creation (injected from decorator)'
    inputs:
      targetType: 'inline'
      script: |
        ############      clone repository    ##############
        echo "before cloning"
        dir

        cd "$(System.DefaultWorkingDirectory)"
        echo "after cd System.DefaultWorkingDirectory"
        dir

        mkdir _git
        cd _git
        echo "after create _git folder"
        dir

        $RepoPartialUri = "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_git/$(Build.Repository.Name)".SubString(8)
        echo "Repositorio https://$RepoPartialUri"

        git clone "https://$(System.AccessToken)@$RepoPartialUri"

        cd $(Build.Repository.Name)
        echo "Cloned, Working Dir changed for '$(Build.Repository.Name)'"

        ############      tag creation    ##############

        ############      tag name    ##############
        $TagName = "$(Build.BuildNumber)"
        echo "TagName: $TagName"

        ############      tag message    ##############
        $BeautyDate = Get-Date -Format "dddd dd/MMMM/yyyy HH:mm K"
        $Description = "$(Release.Reason) Release"

        echo "ReleaseDescription: $(Release.ReleaseDescription)"
        if (-not [String]::IsNullOrWhiteSpace( "$(Release.ReleaseDescription)" ))
        {
            $Description = "$Description, $(Release.ReleaseDescription)"
        }

        $TagMessage = "$Description, published in production at $BeautyDate (auto generated tag)"
        echo "TagMessage: $TagMessage"

        ############      tagging    ##############
        git config user.email "tagger-bot@example.com"
        git config user.name "Automated Release Tagger"

        git tag -a $TagName -m "$TagMessage" $(Build.SourceVersion)

        if(-not $?){
          echo "[Error] git tag creation failed"
          echo "##vso[task.logissue type=error] Fail to create git tag: $TagName"
          echo "before cleaning"
          dir "$(System.DefaultWorkingDirectory)"

          cd "$(System.DefaultWorkingDirectory)"
          rm -r -force _git

          echo "after cleaning"
          dir "$(System.DefaultWorkingDirectory)"
          exit 1
        }

        echo "tag done"
        git show $TagName

        git push origin $TagName

        ############      Clean _git folder    ##############

        echo "before cleaning"
        dir "$(System.DefaultWorkingDirectory)"

        cd "$(System.DefaultWorkingDirectory)"
        rm -r -force _git

        echo "after cleaning"
        dir "$(System.DefaultWorkingDirectory)"